CREATE TABLE customers (
    customer_id bigint generated always as identity,

    primary key (customer_id)
);

CREATE TABLE transactions (

    transaction_id bigint generated by default as identity,
    -- The types decimal and numeric are equivalent in postgres. According to the standard, decimal may offer 
    -- greater precision than asked for.
    amount DECIMAL(5, 2) not null,
    customer_id INT,
    order_date DATE not null,
  
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    PRIMARY KEY (transaction_id)

);


INSERT INTO customers
VALUES  (default),
        (default),
        (default), 
        (default);


INSERT INTO transactions
VALUES 	(1000, 4.99, 3, '2023-01-01'),
		(1001, 2.89, 2, '2023-01-01'),
		(1002, 3.38, 3, '2023-01-02'),
		(1003, 4.99, 1, '2023-01-02'),
		(1004, 1.00, NULL, '2023-01-03'),
		(1005, 2.49, 4, '2023-01-03'),
		(1006, 5.48, NULL, '2023-01-03');

-- grouped columns & aggregated columns need not be in any particular order in the results selection
select count(*) as purchases,
       customer_id
from transactions
where customer_id is not null
group by customer_id;